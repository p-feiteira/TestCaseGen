package rest;

import com.google.gson.Gson;
import file.ExcelCreator;
import file.ExcelReader;
import file.PDFReader;
import monkeyLearn.ClassificationRequest;
import org.apache.commons.io.IOUtils;
import org.glassfish.jersey.jdkhttp.JdkHttpServerFactory;
import org.glassfish.jersey.server.ResourceConfig;
import utils.FileHandling;
import utils.IP;

import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

/**
 * @author Pedro Feiteira, n48119
 *
 * This class represents the Rest Server. All the request are made by multipart/form-data and they can be received with
 * an InputStream
 */
public class RestServer implements Rest {

    Gson gson = new Gson();

    /**
     * Writes the received pdf to a path and then it is parsed. The parsing consists in requirements extraction.
     * This information is transformed into a map with the requirement title as key and the text saved in multiple lines
     * as value (String list).
     *
     * @param uploadedInputStream, request input stream
     * @return json file categorized by requirement types
     */
    public Response analyzePDF(InputStream uploadedInputStream) {

        try {
            String path = FileHandling.writeToFile(uploadedInputStream);
            Map<String, List<String>> requirements = PDFReader.parsePDF(path);
            List<String> textList = new LinkedList<>();
            //Transformations from map to linked list
            for (String key : requirements.keySet()) {
                StringBuilder str = new StringBuilder();
                requirements.get(key).forEach(line -> {
                    str.append(line + " ");
                });
                textList.add(str.toString());
            }
            String[] array = new String[textList.size()];
            //return Response.ok(gson.toJson(ClassificationRequest.response(textList.toArray(array))), MediaType.APPLICATION_JSON).build();

            return Response.ok("{\"Communications Interfaces\":[{\"id\":\"\",\"desc\":{\"base\":\"The communication between the different parts of the system is important since they depend on each\\nother. However, in what way the communication is achieved is not important for the system and is\\ntherefore handled by the underlying operating systems for both the mobile application and the web portal.\\n\",\"hasScenario\":false}},{\"id\":\"\",\"desc\":{\"base\":\"When prioritizing the requirements the ten most important ones were picked out first. This was done with\\na simple “1 to 10” ranking method, with one being “not important” and ten “very important”. Based on\\nthe elicitation meetings, and the perceived ideas of what was important to the different stakeholders, a\\nnumber was set for each requirement. The numbers were then summed up for each requirement and the\\nten with the highest score were chosen to be prioritized with the cost value approach. The results, which\\nare red-marked, can be seen in Appendix I and as shown, it turned out to be five functional requirements\\nand five quality requirements. These requirements were then prioritized according to the cost value\\napproach and the results can be viewed under Appendix II.\\nThe remaining requirements were prioritized according to the “Five-Way Priority Scheme” as shown in\\nAppendix III. This method was chosen since it gives the different stakeholders the same importance and\\nhas an enough wide range for determining which requirement is more important than the other [3].\\nHowever, in this prioritization process, the development team was not included as a stakeholder since the\\ndifferent features were not considered to be as important to them as for the other stakeholders.\\n\\nOther methods for prioritization, such as the hundred-dollar test and the yes-no vote, were also\\nconsidered. The hundred-dollar test is quite similar to the five-way priority scheme, since it also gives a\\nwide range for ranking the requirements. However, it is more easily misused since someone could save all\\ntheir money and put them on a requirement that they think is very important [3]. Others might not agree\\nthat this requirement is important but it might still get the most votes since one person cared about it [3].\\nThe yes-no vote method might be fairly simple to carry out, however the range is too narrow. For\\ninstance, if two requirements are not very important it would be hard to determine which of those\\nrequirements that is more important than the other [3].\\n\\nIn conclusion, weighing the disadvantages and advantages of these methods against each other lead us to\\nchoose the five-way priority scheme.\\n\",\"hasScenario\":false}}],\"Functional Requirements\":[{\"id\":\"\",\"desc\":{\"base\":\"This section provides a detailed description of all inputs into and outputs from the system. It also gives a\\ndescription of the hardware, software and communication interfaces and provides basic prototypes of the\\nuser interface.\\n\",\"hasScenario\":false}},{\"id\":\"\",\"desc\":{\"base\":\"This section includes the requirements that specify all the fundamental actions of the software system.\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR1\",\"desc\":{\"base\":\"TITLE: Download mobile application\\n\\n DESC: A user should be able to download the mobile application through either an application store or\\nsimilar service on the mobile phone. The application should be free to download.\\n RAT: In order for a user to download the mobile application.\\n DEP: None\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR10\",\"desc\":{\"base\":\"TITLE: Mobile application - Switch result view\\nDESC: A user should be able to switch between a map view and a list view for all search options.\\n RAT: In order for a user to switch between result views.\\nDEP: FR7, FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR11\",\"desc\":{\"base\":\"TITLE: Mobile application - Selecting the information link\\nDESC: A user should be able to select the information link, which is included on all result items. The link\\nwill direct the user to an information page, which includes a picture of the restaurant, the restaurant name,\\naddress, phone number, e-mail address, type of food, average price, restaurant description and a menu\\nwith name, description and price of the different dishes.\\n RAT: In order to show information about the restaurants.\\nDEP: FR7, FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR12\",\"desc\":{\"base\":\"TITLE: Mobile application - Search by price\\nDESC: A user should be able to input a maximum and a minimum price range. The result is displayed in\\na list view by default.\\nRAT: In order for a user to search by price.\\nDEP: FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR13\",\"desc\":{\"base\":\"TITLE: Mobile application - Search by destination\\nDESC: A user should be able to input a maximum and a minimum distance, according to his/her position.\\nBy default the minimum distance is set to 0 km and the maximum to 10 km. The user should be able to\\ninput a higher or lower maximum distance and a higher minimum distance than set by default. The result\\nis displayed in a map view by default.\\nRAT: In order for a user to search by destination.\\nDEP: FR7\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR14\",\"desc\":{\"base\":\"TITLE: Accepted input for price and destination search\\nDESC:\\nIntegers should be accepted as input when a user searches by price or destination. If the system\\nreceives an invalid input the user should be informed and prompted to insert an accepted input.\\nRAT: In order for a user to search with valid input.\\nDEP: FR12, FR13\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR15\",\"desc\":{\"base\":\"TITLE: Mobile application - Search by restaurant type\\nDESC: A user should be able to select a restaurant type in a given list as input. The result is displayed in a\\nmap view by default.\\nRAT: In order for a user to search by restaurant type.\\nDEP: FR7\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR16\",\"desc\":{\"base\":\"TITLE: Mobile application - Search by specific dish\\nDESC: A user should be able to select a specific dish in a given list as input. The result is displayed in a\\nmap view by default.\\nRAT: In order for a user to search by specific dish.\\nDEP: FR7\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR17\",\"desc\":{\"base\":\"TITLE: Mobile application - Free-text search\\nDESC: A user should be able to conduct a search by providing either restaurant name, restaurant\\ndescription, restaurant address, restaurant type or restaurant menu in the free-text search field. The result\\nis displayed in a map view by default.\\nRAT: In order for a user to search through the free-text search.\\nDEP: FR7\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR18\",\"desc\":{\"base\":\"TITLE: Mobile application - No match found\\nDESC: If no match is found the user should be informed but kept on the search page in order to get the\\npossibility to conduct a new search right away.\\nRAT: In order for user to conduct a new search if no match is found.\\nDEP: FR5\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR19\",\"desc\":{\"base\":\" TITLE: Mobile application - Sorting results\\n DESC: When viewing the results in a list, a user should be able to sort the results according to price,\\ndistance, restaurant type, specific dish or restaurant name.\\n \uF0B7 When sorting by restaurant name, specific dish or restaurant type the results should be ordered\\nalphabetically.\\n \uF0B7 When sorting by price the results should be ordered from cheapest to most expensive.\\n\uF0B7 When sorting by distance the results should be ordered from closets to furthest distance according\\nto the user’s position.\\n When the sort button for a specific search option is clicked, then the order should be reversed and ordered\\nin a descending matter. If the sort button is clicked again the order of the results should be reversed.\\nRAT: In order for a user to sort results in a list.\\nDEP: FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR2\",\"desc\":{\"base\":\" TITLE: Download and notify users of new releases\\n DESC: When a new/updated version or release of the software is released, the user should check for these\\nmanually. The download of the new release should be done through the mobile phone in the same way as\\ndownloading the mobile application.\\nRAT: In order for a user to download a new/updated release.\\nDEP: FR1\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR20\",\"desc\":{\"base\":\" TITLE: Mobile application - Filtering results\\n DESC: When viewing the results in a list or a map, a user should be able to filter the results in a filtering\\nmenu. The filtering options include:\\n\uF0B7 increasing or decreasing the maximum distance\\n \uF0B7 increasing or decreasing the maximum price\\n\uF0B7 choosing a restaurant type\\n\uF0B7 choosing a specific dish\\nWhen filtering the results, only the existing results shall be affected and a new search query should not be\\nsent.\\n\\n\\n RAT: In order for a user to filter results in a list or a map.\\nDEP: FR7, FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR21\",\"desc\":{\"base\":\" TITLE: Mobile application - Profile page\\nDESC: On the mobile application, a user should have a profile page. On the profile page a user can edit\\nhis/her information, which includes the password, e-mail address and phone number. A user should also\\nbe able to choose what language the mobile application should be set to. The different language choices\\nare Swedish, English, Spanish and French.\\n RAT: In order for a user to have a profile page on the mobile application.\\nDEP: FR1\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR3\",\"desc\":{\"base\":\"TITLE: User registration - Mobile application\\nDESC: Given that a user has downloaded the mobile application, then the user should be able to register\\nthrough the mobile application. The user must provide user-name, password and e-mail address. The user\\ncan choose to provide a regularly used phone number.\\nRAT: In order for a user to register on the mobile application.\\nDEP: FR1\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR4\",\"desc\":{\"base\":\"TITLE: User log-in - Mobile application\\nDESC: Given that a user has registered, then the user should be able to log in to the mobile application.\\nThe log-in information will be stored on the phone and in the future the user should be logged in\\nautomatically.\\n RAT: In order for a user to register on the mobile application.\\nDEP: FR1, FR3\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR5\",\"desc\":{\"base\":\" TITLE: Retrieve password\\n DESC: Given that a user has registered, then the user should be able to retrieve his/her password by e- mail.\\n RAT: In order for a user to retrieve his/her password.\\n DEP: FR1\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR6\",\"desc\":{\"base\":\"TITLE: Mobile application - Search\\n DESC: Given that a user is logged in to the mobile application, then the first page that is shown should be\\nthe search page. The user should be able to search for a restaurant, according to several search options.\\nThe search options are Price, Destination, Restaurant type and Specific dish. There should also be a free- text search option. A user should be able to select multiple search options in one search.\\nRAT: In order for a user to search for a restaurant.\\nDEP: FR4\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR7\",\"desc\":{\"base\":\"TITLE: Mobile application - Search result in a map view\\nDESC:\\n \uF0B7 Search results can be viewed on a map. On the map, the relevant and closest restaurants according\\nto the user’s position are shown.\\n \uF0B7 A specific pin will represent a specific restaurant location. On each pin there should be an\\ninformation link.\\n \uF0B7 There should be maximally 100 results displayed. The map view should have a default zoom.\\n \uF0B7 The map view should include a button that, when selected, should display different filtering\\noptions in a filtering menu.\\n RAT: The way results are displayed in a map.\\nDEP: FR6\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR8\",\"desc\":{\"base\":\"TITLE: Mobile application - Search result in a list view\\nDESC:\\n \uF0B7 Search results can be viewed in a list. Each element in the list represents a specific restaurant.\\nEach element should include the restaurant name, telephone number, type of food, distance\\naccording to the user’s position, average price, a short two-line description, a link to the\\nrestaurant’s web-page and an information link.\\n \uF0B7 There should be maximally 100 results displayed. If the result contains more restaurants than\\nwhat can be displayed on the screen at one time, the user should be able to scroll through them.\\n \uF0B7 When searching by price the restaurants should be sorted according to the following order:\\n 1. average price\\n 2. distance\\n 3. restaurant type\\n4. specific dish\\n \uF0B7 When searching by a search option, other than price, the restaurants should be sorted according to\\nthe following order:\\n 1. distance\\n 2. average price\\n 3. restaurant type\\n4. specific dish\\n \uF0B7 The list view should include a header with different selectable sorting options.\\n\uF0B7 The list view should include a button that, when selected, should display different filtering\\noptions in a filtering menu.\\n RAT: The way results should be displayed in a list.\\nDEP: FR6\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR9\",\"desc\":{\"base\":\"TITLE: Mobile application - Navigation to restaurant\\nDESC: A user should be able to select a pin on a map or an element on a list. When a selection is made,\\nthe location of the restaurant should be sent to the mobile phone’s GPS-navigation program. The user\\nshould then be navigated to the destination. When the destination is reached, a user should be able to go\\nback to the search page on the mobile application.\\nRAT: To navigate a user to a chosen restaurant.\\nDEP: FR7, FR8\\n\",\"hasScenario\":false}},{\"id\":\"ID: FR22\",\"desc\":{\"base\":\"Feature: Create an account\\nIn order to create an account\\nA restaurant owner\\nShould register on the web-portal\\n\",\"scenarios\":{\" Full information for registration\":[\" Given the restaurant owner wants to create an account\",\"And the restaurant owner does not have an account\",\"When the restaurant owner registers on the web-portal by providing user name\",\"And password\",\"And address\",\"And e-mail address\",\"And phone number\",\"And mobile number\",\"Then the restaurant owner should be able to apply for verification\"],\"Confirmed registration\":[\"Given the restaurant owner has applied for verification\",\"And has not received a confirmation e-mail after registration\",\"When the restaurant owner receives a confirmation e-mail\",\"Then the restaurant owner should be able to log in\"],\"Required information for registration\":[\"Given the restaurant owner wants to create an account\",\"And the restaurant owner does not have an account\",\"When the restaurant owner registers on the web-portal by providing user-name\",\"And password\",\"And address\",\"And e-mail address\",\"And phone number\",\"Then the restaurant owner should be able to apply for verification\",\"\"]},\"hasScenario\":true}},{\"id\":\"ID: FR23\",\"desc\":{\"base\":\"Feature: Restaurant owner log-in\\nIn order to use the system\\nA restaurant owner\\n Should be logged in to the web-portal\\n\",\"scenarios\":{\"Successful log-in\":[\"Given the restaurant owner wants to log in\",\"When the restaurant owner logs in with his/her account\",\"Then the restaurant owner should be logged in as a restaurant owner\"],\"Retrieve password\":[\"Given the restaurant owner wants to log in\",\"And has lost the password\",\"When the restaurant owner enters his/her email address in the “Retrieve password” form\",\"And submits the form\",\"Then the restaurant owner should receive an email containing the password\"]},\"hasScenario\":true}},{\"id\":\"ID: FR24\",\"desc\":{\"base\":\"Feature: Manage information\\nIn order to manage information\\n A restaurant owner\\nShould be logged in to the web-portal\\n\",\"scenarios\":{\"Show fields for managing information\":[\"Given the restaurant owner is logged in\",\"When the restaurant owner wants to manage information\",\"Then the restaurant owner should be able to manage information in a form\"],\" Filling in mandatory fields\":[\"Given the restaurant owner wants to fill in the mandatory fields of the form\",\" When the restaurant owner provides average price\",\"And address\",\"And e-mail address\",\"And phone number\",\"And restaurant name\",\"Then the restaurant owner has filled the mandatory fields of the form\"],\"Adding information with mandatory fields\":[\"Given the restaurant owner has filled in the mandatory fields of the form\",\"When the restaurant owner submits the form\",\"Then the information about the restaurant should be added\"],\" Filling in optional fields\":[\"Given the restaurant owner of a restaurant wants to fill in optional fields in the form\",\"When the restaurant owner provides restaurant description\",\"And menu\",\" And type of restaurant\",\" And picture of restaurant\",\"And mobile phone\",\"Then the restaurant owner has filled in optional fields in the form\"],\"Adding information with mandatory and optional fields\":[\"Given the restaurant owner has filled in the mandatory fields of the form\",\"And filled in one or more optional fields of the form\",\"When the restaurant owner submits the form\",\"Then the information about the restaurant should be added\"],\"Filling in menu field\":[\"Given the restaurant owner wants to fill in the menu field in the form\",\"When the restaurant owner provides dish name\",\"And dish description\",\"And dish price\",\"Then the restaurant owner has filled in the menu field in the form\"],\"Deleting information\":[\"Given the restaurant owner is logged in\",\"And information exists\",\"When the restaurant owner deletes information\",\"Then the information should be deleted\"],\"Editing information\":[\"Given the restaurant owner is logged in\",\"And information exists\",\" When the restaurant owner edits information\",\"Then the information should be edited\"]},\"hasScenario\":true}},{\"id\":\"ID: FR25\",\"desc\":{\"base\":\" Feature: Restaurant owner - Selecting preferred language on the web-portal\\nIn order to understand the web-portal\\nA restaurant owner\\nShould be able to select a preferred language for the web-portal\\n\",\"scenarios\":{\"Select Swedish as preferred language\":[\"Given the restaurant owner wants to select a preferred language\",\"When the restaurant owner selects Swedish as a new language\",\" Then the web-portal will show all text in Swedish\"],\"Select French as preferred language\":[\"Given the restaurant owner wants to select a preferred language\",\"When the restaurant owner selects French as a new language\",\" Then the web-portal will show all text in French\"],\"Select English as preferred language\":[\"Given the restaurant owner wants to select a preferred language\",\"When the restaurant owner selects English as a new language\",\" Then the web-portal will show all text in English\"],\"Select Spanish as preferred language\":[\"Given the restaurant owner wants to select a preferred language\",\"When the restaurant owner selects Spanish as a new language\",\" Then the web-portal will show all text in Spanish\"]},\"hasScenario\":true}},{\"id\":\"ID: FR26\",\"desc\":{\"base\":\"Feature: Administrator log in\\nIn order to administer the system\\nAn administrator\\nShould be logged in to the web-portal\\n\",\"scenarios\":{\"Successful log-in\":[\"Given the administrator wants to log in\",\"When the administrator logs in with an administrator account\",\"Then the administrator should be logged in as an administrator\"]},\"hasScenario\":true}},{\"id\":\"ID: FR27\",\"desc\":{\"base\":\"Feature: Verify restaurant owner\\nIn order to allow a restaurant owner to use the system\\nAn administrator\\nShould be able to verify the restaurant owner\\n\",\"scenarios\":{\"Verify a restaurant owner\":[\"Given the administrator is logged in\",\"When the administrator verifies a restaurant owner\",\"Then the restaurant owner should be able to log in\",\"And the restaurant owner should be notified by a confirmation email\"],\"Reject a restaurant owner\":[\"Given the administrator is logged in\",\"When the administrator rejects a restaurant owner\",\"Then the restaurant owner should not be able to log in\",\"And the restaurant owner should be notified by a rejection email\"]},\"hasScenario\":true}},{\"id\":\"ID: FR28\",\"desc\":{\"base\":\"Feature: Manage restaurant types\\nIn order to have a list of restaurant types\\nAn administrator\\nShould be able to manage the restaurant types\\n\",\"scenarios\":{\"Add a new restaurant type\":[\"Given the administrator is logged in\",\"When the administrator creates a new restaurant type\",\"Then the new restaurant type should be added to the list of restaurant types\"],\"Editing an existing restaurant type\":[\"Given the administrator is logged in\",\"When the administrator edits an existing restaurant type\",\"Then the restaurant type should be updated in the list of restaurant types\"],\"Delete a restaurant type\":[\"Given the administrator is logged in\",\"When the administrator deletes a restaurant type\",\"Then the deleted restaurant type should be removed from the list of restaurant types\"]},\"hasScenario\":true}},{\"id\":\"ID: FR29\",\"desc\":{\"base\":\"Feature: Manage restaurant dishes\\nIn order to have a list of dishes\\nAn administrator\\nShould be able to manage the dishes\\n\",\"scenarios\":{\"Editing an existing dish\":[\"Given the administrator is logged in\",\"When the administrator edits an existing dish\",\"Then the dish should be updated in the list of dishes\"],\"Add a new dish\":[\"Given the administrator is logged in\",\"When the administrator creates a new dish\",\"Then the new dish should be added to the list of dishes\"],\"Delete a dish\":[\"Given the administrator is logged in\",\"When the administrator deletes a dish\",\"Then the deleted dish should be removed from the list of dishes\"]},\"hasScenario\":true}},{\"id\":\"ID: FR30\",\"desc\":{\"base\":\"Feature: Manage restaurant information\\nIn order to manage restaurant information\\n An administrator\\nShould be logged in to the web-portal\\n\",\"scenarios\":{\"Delete restaurant information\":[\"Given the administrator is logged in\",\"And information about a restaurant exists\",\"When the administrator deletes the information\",\"Then the information about the restaurant should be deleted\"],\"Edit restaurant information\":[\"Given the administrator is logged in\",\" And information about a restaurant exists\",\"When the administrator edits the information\",\"Then the information about the restaurant should be edited\"],\"Add restaurant information\":[\"Given the administrator is logged in\",\"When the administrator adds restaurant information\",\"Then the information should be added to the restaurant\"]},\"hasScenario\":true}},{\"id\":\"ID: FR31\",\"desc\":{\"base\":\"Feature: Manage users\\nIn order to keep track of the users\\nAn administrator\\nShould be able to manage the users\\n\",\"scenarios\":{\"Edit an existing user’s information\":[\"Given the administrator is logged in\",\"When the administrator edits an existing user\",\"Then the user information should be updated\"],\"Delete/Inactivate an existing user\":[\"Given the administrator is logged in\",\"When the administrator deletes an existing user\",\"Then the user should be deleted\"]},\"hasScenario\":true}},{\"id\":\"ID: FR32\",\"desc\":{\"base\":\"Feature: Manage restaurant owners\\nIn order to keep track of the restaurant owners\\nAn administrator\\nShould be able to manage the restaurant owners\\n\",\"scenarios\":{\"Edit an existing restaurant owner\":[\"Given the administrator is logged in\",\"When the administrator edits an existing restaurant owner\",\"Then the restaurant owner information should be updated\"],\"Add a new restaurant owner\":[\"Given the administrator is logged in\",\"When the administrator creates a new restaurant owner\",\"Then the new restaurant owner should be added\"],\"Delete an existing restaurant owner\":[\"Given the administrator is logged in\",\"When the administrator deletes an existing restaurant owner\",\"Then the restaurant owner should be deleted\",\"And the restaurant information should be deleted\"]},\"hasScenario\":true}},{\"id\":\"ID: FR33\",\"desc\":{\"base\":\"\\nFeature: Administrator - Selecting preferred language on the web-portal\\nIn order to understand the web-portal\\nAn administrator\\nShould be able to select a preferred language for the web-portal\\n\",\"scenarios\":{\"Select Swedish as preferred language\":[\"Given the administrator wants to select a preferred language\",\"When the administrator selects Swedish as a new language\",\" Then the web-portal will show all text in Swedish\"],\"Select French as preferred language\":[\"Given the administrator wants to select a preferred language\",\"When the administrator selects French as a new language\",\" Then the web-portal will show all text in French\"],\"Select English as preferred language\":[\"Given the administrator wants to select a preferred language\",\"When the administrator selects English as a new language\",\" Then the web-portal will show all text in English\"],\"Select Spanish as preferred language\":[\"Given the administrator wants to select a preferred language\",\"When the administrator selects Spanish as a new language\",\" Then the web-portal will show all text in Spanish\"]},\"hasScenario\":true}},{\"id\":\"\",\"desc\":{\"base\":\"The requirements in this section provide a detailed specification of the user interaction with the software\\nand measurements placed on the system performance.\\n\",\"hasScenario\":false}},{\"id\":\"\",\"desc\":{\"base\":\"The requirements were divided into three releases based on the prioritization and their dependencies. The\\nthree different releases were assembled so that each would work as a fully functional application.\\n In the first release the requirements that build up the foundation of the application were included, together\\nwith the most highly prioritized requirements and their dependencies.\\n\",\"hasScenario\":false}}],\"Hardware Interfaces\":[{\"id\":\"\",\"desc\":{\"base\":\"Since neither the mobile application nor the web portal have any designated hardware, it does not have\\nany direct hardware interfaces. The physical GPS is managed by the GPS application in the mobile phone\\nand the hardware connection to the database server is managed by the underlying operating system on the\\nmobile phone and the web server.\\n\",\"hasScenario\":false}},{\"id\":\"\",\"desc\":{\"base\":\"This section includes the design constraints on the software caused by the hardware.\\n \\n\",\"hasScenario\":false}}],\"Performance Requirements\":[{\"id\":\"ID: QR1\",\"desc\":{\"base\":\"TITLE: Prominent search feature\\nDESC: The search feature should be prominent and easy to find for the user.\\nRAT: In order to for a user to find the search feature easily.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR2\",\"desc\":{\"base\":\"TITLE: Usage of the search feature\\nDESC: The different search options should be evident, simple and easy to understand.\\nRAT: In order to for a user to perform a search easily.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR3\",\"desc\":{\"base\":\"TITLE: Usage of the result in the list view\\nDESC: The results displayed in the list view should be user friendly and easy to understand. Selecting an\\nelement in the result list should only take one click.\\nRAT: In order to for a user to use the list view easily.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR4\",\"desc\":{\"base\":\"TITLE: Usage of the result in the map view\\nDESC: The results displayed in the map view should be user friendly and easy to understand. Selecting a\\npin on the map should only take one click.\\nRAT: In order to for a user to use the map view easily.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR5\",\"desc\":{\"base\":\"TITLE: Usage of the information link\\nDESC: The information link should be prominent and it should be evident that it is a usable link.\\nSelecting the information link should only take one click.\\nRAT: In order to for a user to use the information link easily.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR6\",\"desc\":{\"base\":\"TAG: ResponseTime\\nGIST: The fastness of the search\\nSCALE: The response time of a search\\nMETER: Measurements obtained from 1000 searches during testing.\\nMUST: No more than 2 seconds 100% of the time.\\nWISH: No more than 1 second 100% of the time.\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR8\",\"desc\":{\"base\":\"TAG: SystemDependability\\nGIST: The fault tolerance of the system.\\nSCALE:\\nIf the system loses the connection to the Internet or to the GPS device or the system gets some\\nstrange input, the user should be informed.\\nMETER: Measurements obtained from 1000 hours of usage during testing.\\nMUST: 100% of the time.\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR19\",\"desc\":{\"base\":\"TITLE: Application extendibility\\nDESC: The application should be easy to extend. The code should be written in a way that it favors\\nimplementation of new functions.\\nRAT: In order for future functions to be implemented easily to the application.\\nDEP: none\\nID: QR21\\nTITLE: Application testability\\nDESC: Test environments should be built for the application to allow testing of the applications different\\nfunctions.\\nRAT: In order to test the application.\\nDEP: none\\n\",\"hasScenario\":false}}],\"Security Requirements\":[{\"id\":\"\",\"desc\":{\"base\":\"The requirements in this section specify the required reliability, availability, security and maintainability\\nof the software system.\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR12\",\"desc\":{\"base\":\"TAG: CommunicationSecurity\\nGIST: Security of the communication between the system and server.\\nSCALE: The messages should be encrypted for log-in communications, so others cannot get user-name\\nand password from those messages.\\nMETER: Attempts to get user-name and password through obtained messages on 1000 log-in session\\nduring testing.\\nMUST: 100% of the Communication Messages in the communication of a log-in session should be\\nencrypted.\\nCommunication Messages: Defined: Every exchanged of information between client and server.\\nID: QR13\\nTAG: RestaurantOwnerLoginAccountSecurity\\nGIST: Security of accounts.\\nSCALE:\\nIf a restaurant owner tries to log in to the web portal with a non-existing account then the\\nrestaurant owner should not be logged in. The restaurant owner should be notified about log-in failure.\\nMETER: 1000 attempts to log-in with a non-existing user account during testing.\\nMUST: 100% of the time.\\nID: QR14\\nTAG: AdminLoginAccountSecurity\\nGIST: Security of accounts.\\nSCALE:\\nIf an admin tries to log in to the web portal with a non-existing account then the admin should\\nnot be logged in. The admin should be notified about log-in failure.\\nMETER: 1000 attempts to log-in with a non-existing user account during testing.\\nMUST: 100% of the time.\\nID: QR15\\nTAG: RestaurantOwnerAccountSecurity\\nGIST: Security of restaurant owners accounts.\\nSCALE: A restaurant owner and IP address should not be able to log-in for a certain time period after\\nthree times of failed log-in attempts.\\nMETER: 1000 attempts to log-in during the lock period after user account has been locked because of\\nfailed log-in attempts of three times.\\nMUST: The locking period should be half an hour, and during that period the log-in function is disabled.\\nID: QR16\\nTAG: AdminAccountSecurity\\nGIST: Security of admin accounts.\\nSCALE: An admin and IP address should not be able to log-in to the web portal for a certain time period\\nafter three times of failed log-in attempts.\\nMETER: 1000 attempts to log-in during the lock period after user account has been locked because of\\nfailed log-in attempts of three times.\\nMUST: The locking period should be half an hour, and during that period the log-in function is disabled.\\nID: QR17\\nTAG: UserCreateAccountSecurity\\nGIST: The security of creating account for users of the system.\\nSCALE:\\nIf a user wants to create an account and the desired user name is occupied, the user should be\\nasked to choose a different user name.\\nMETER: Measurements obtained on 1000 hours of usage during testing.\\nMUST: 100% of the time.\\nID: QR18\\nTAG: RestaurantOwnerCreateAccountSecurity\\nGIST: The security of creating account for restaurant owners of the system.\\nSCALE:\\nIf a restaurant owner wants to create an account and the desired user name is occupied, the\\nrestaurant owner should be asked to choose a different user name.\\nMETER: Measurements obtained on 1000 hours of usage during testing.\\nMUST: 100% of the time.\\n\",\"hasScenario\":false}}],\"Software Interfaces\":[{\"id\":\"\",\"desc\":{\"base\":\"The mobile application communicates with the GPS application in order to get geographical information\\nabout where the user is located and the visual representation of it, and with the database in order to get the\\ninformation about the restaurants, see Figure 1. The communication between the database and the web\\nportal consists of operation concerning both reading and modifying the data, while the communication\\nbetween the database and the mobile application consists of only reading operations.\\n\",\"hasScenario\":false}}],\"Software Quality Attributes\":[{\"id\":\"\",\"desc\":{\"base\":\"This section contains all of the functional and quality requirements of the system. It gives a detailed\\ndescription of the system and all its features.\\n \\n\",\"hasScenario\":false}},{\"id\":\"ID: QR10\",\"desc\":{\"base\":\"TAG: HardDriveSpace\\nGIST: Hard drive space.\\nSCALE: The application’s need of hard drive space.\\nMETER: MB.\\nMUST: No more than 20 MB.\\nPLAN: No more than 15 MB.\\nWISH: No more than 10 MB.\\nMB: DEFINED: Megabyte\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR11\",\"desc\":{\"base\":\"TAG: ApplicationMemoryUsage\\nGIST: The amount of Operate System memory occupied by the application.\\nSCALE: MB.\\nMETER: Observations done from the performance log during testing\\nMUST: No more than 20 MB.\\nPLAN: No more than 16 MB\\nWISH: No more than 10 MB\\nOperate System: DEFINED: The mobile Operate System which the application is running on.\\nMB: DEFINED: Megabyte.\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR9\",\"desc\":{\"base\":\"TAG: SystemReliability\\nGIST: The reliability of the system.\\nSCALE:\\nThe reliability that the system gives the right result on a search.\\nMETER: Measurements obtained from 1000 searches during testing.\\nMUST: More than 98% of the searches.\\nPLAN: More than 99% of the searches.\\nWISH: 100% of the searches.\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR7\",\"desc\":{\"base\":\"TAG: SystemAvailability\\nGIST: The availability of the system when it is used.\\nSCALE: The average system availability (not considering network failing).\\nMETER: Measurements obtained from 1000 hours of usage during testing.\\nMUST: More than 98% of the time.\\nPLAN: More than 99% of the time.\\nWISH: 100% of the time.\\nID: QR22\\nTITLE: Internet Connection\\nDESC: The application should be connected to the Internet.\\nRAT: In order for the application to communicate with the database.\\nDEP: none\\nID: QR23\\nTITLE: GPS Connection\\nDESC: The application should be connected to the GPS device.\\nRAT: In order for the application to get the users location, the map and to calculate the distance.\\nDEP: none\\n\",\"hasScenario\":false}},{\"id\":\"ID: QR20\",\"desc\":{\"base\":\"TITLE: Application portability\\nDESC: The application should be portable with iOS and Android.\\nRAT: The adaptable platform for the application to run on.\\nDEP: none\\n4. Prioritization and Release Plan\\nIn order to get a view of how to divide the requirements into different releases and what requirements\\nshould be included in which release, a prioritization of the requirements is needed. This section discusses\\nthe choice of prioritization methods and gives a suggestion of how the release plan for these requirements\\ncould look like.\\n\",\"hasScenario\":false}}],\"User Interfaces\":[{\"id\":\"\",\"desc\":{\"base\":\"A first-time user of the mobile application should see the log-in page when he/she opens the application,\\nsee Figure 2. If the user has not registered, he/she should be able to do that on the log-in page.\\nIf the user is not a first-time user, he/she should be able to see the search page directly when the\\napplication is opened, see Figure 3. Here the user chooses the type of search he/she wants to conduct.\\nEvery user should have a profile page where they can edit their e-mail address, phone number and\\npassword, see Figure 4. Also, the user can set the mobile application to his/her preferred language. The\\n“P” icon shows where the user can click to navigate to his/her profile page.\\nFigure 2 - Login page\\nFigure 3 – Search page\\nFigure 4 – Profile page\\nIn Figure 5, the list view for the results is shown. When a user searches by price, this view should be the\\ndefault one. The sorting header allows the user to sort the results according to price, restaurant name,\\ndistance, restaurant type and specific dish. Each result item includes information about the restaurants, a\\nlink to the restaurant’s web-page and an information link, which provides a more detailed description of\\nthe restaurant. There is also a filtering option, where the user can choose to filter the results by increasing\\nor decreasing the price or distance range, see Figure 7.\\n In the map view each restaurant is represented by a pin, see Figure 6. Next to every pin there is an\\ninformation link which provides a more detailed description of the restaurant, as mentioned for the list\\nview. The same filtering option, as for the list view, is included in the map view.\\n\\nThe restaurant owners and administrators interact with the system through a web-portal, see Figure 8. A\\nrestaurant owner should be able to register on the web-portal in order to log in and manage the restaurant\\ninformation. An administrator should also be able to log in to the web-portal where he/she can administer\\nthe system by for instance editing restaurant or user information.\\n Figure 5 – List view Figure 6 – Map view Figure 7 – Filter menu\\nFigure 8 – Web Portal\\n\",\"hasScenario\":false}}]}",
        MediaType.APPLICATION_JSON).build();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;
    }

    /**
     * Writes the received excel to a path and then it is parsed. The parsing consists in test name and description
     * extraction
     *
     * @param uploadedInputStream, request input stream
     * @return json file
     */
    public Response analyzeExcel(InputStream uploadedInputStream) {
        try {
            String path = FileHandling.writeToFile(uploadedInputStream);
            return Response.ok(gson.toJson(ExcelReader.parseExcel(path)), MediaType.APPLICATION_JSON).build();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }


    /**
     * Receives a form data with a json. An Excel worksheet will be created with json information
     *
     * @param uploadedInputStream, request input stream
     * @return the created excel file
     */
    public Response generate(InputStream uploadedInputStream) {
        String path = null;
        try {
            path = ExcelCreator.createExcel(IOUtils.toByteArray(uploadedInputStream));
            File f = new File(path);
            return Response.ok(f, MediaType.APPLICATION_OCTET_STREAM)
                    .header("Content-Disposition", "attachment; filename=\"" + f.getName() + "\"") //optional
                    .build();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void main(String[] args) {
        String URI_BASE = "http://" + IP.hostAddress() + ":9999/";
        System.out.println(URI_BASE);
        ResourceConfig config = new ResourceConfig();
        config.register(new RestServer());

        JdkHttpServerFactory.createHttpServer(URI.create(URI_BASE), config);

        System.err.println("Server ready....");
    }

}


